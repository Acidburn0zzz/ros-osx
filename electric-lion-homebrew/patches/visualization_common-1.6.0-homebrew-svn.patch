Index: ogre/ogre_src_v1-7-3.tar.bz2.md5sum
===================================================================
--- ogre/ogre_src_v1-7-3.tar.bz2.md5sum	(revision 0)
+++ ogre/ogre_src_v1-7-3.tar.bz2.md5sum	(revision 0)
@@ -0,0 +1 @@
+7a85d3b8f0d64debd186e48ebe9556aa  build/ogre_src_v1-7-3.tar.bz2
\ No newline at end of file
Index: ogre/Makefile
===================================================================
--- ogre/Makefile	(revision 37849)
+++ ogre/Makefile	(working copy)
@@ -1,13 +1,10 @@
 all: ogre
-
-OGRE_VERSION = ogre_src_v1-7-1
+OGRE_VERSION = ogre_src_v1-7-3
 TARBALL = build/$(OGRE_VERSION).tar.bz2
-TARBALL_URL = http://pr.willowgarage.com/downloads/$(OGRE_VERSION).tar.bz2
+TARBALL_URL = http://mirror.ausparc.com/ros/sources/ogre_src_v1-7-3.tar.bz2
 SOURCE_DIR = build/$(OGRE_VERSION)
 UNPACK_CMD = tar xf
 MD5SUM_FILE = $(OGRE_VERSION).tar.bz2.md5sum
-TARBALL_PATCH = hidden_window.patch hidden_window_glx_fix.patch multi_scene_manager.patch
-#INITIAL_DIR = build/ogre
 include $(shell rospack find mk)/download_unpack_build.mk
 
 ROOT = $(shell rospack find ogre)
@@ -22,6 +19,8 @@
 
 CMAKE = cmake
 CMAKE_ARGS = -D CMAKE_INSTALL_PREFIX=$(OGREROOT)\
+						 -D CMAKE_OSX_ARCHITECTURES="x86_64"\
+						 -D OGRE_BUILD_TOOLS="off"\
 						 -D OGRE_BUILD_SAMPLES="off"\
 						 -D OGRE_BUILD_TESTS="off"\
 						 -D CMAKE_BUILD_TYPE="RelWithDebInfo" \
@@ -71,11 +70,19 @@
 	else \
 	  make ogre/lib/pkgconfig/OGRE.pc; \
 	fi
-	@if test ! -f ogre/lib/OGRE/Plugin_CgProgramManager.so; then \
-          echo "BUILD FAILED: Plugin_CgProgramManager.so not created.  Is nvidia-cg-toolkit installed correctly?"; \
-          exit 1; \
-        fi
+	@if test `uname` = Darwin ; then \
+		if test ! -f ogre/lib/Plugin_CgProgramManager.dylib; then \
+			echo "BUILD FAILED: Plugin_CgProgramManager.dylib not created.	 Is nvidia-cg-toolkit installed correctly?"; \
+			exit 1; \
+		fi \
+	else \
+		if test ! -f ogre/lib/OGRE/Plugin_CgProgramManager.so; then \
+			echo "BUILD FAILED: Plugin_CgProgramManager.so not created.	 Is nvidia-cg-toolkit installed correctly?"; \
+			exit 1; \
+		fi \
+	fi
 
+
 ogre/lib/pkgconfig/OGRE.pc: $(SOURCE_DIR)/CMakeLists.txt $(SOURCE_DIR)
         # building OGRE
 	mkdir -p $(ROOT)/$(SOURCE_DIR)/build;
Index: ogre_tools/src/ogre_tools/wx_ogre_render_window.cpp
===================================================================
--- ogre_tools/src/ogre_tools/wx_ogre_render_window.cpp	(revision 37882)
+++ ogre_tools/src/ogre_tools/wx_ogre_render_window.cpp	(working copy)
@@ -196,8 +196,6 @@
   {
 
   }
-
-  ROS_INFO("move");
 }
 
 //------------------------------------------------------------------------------
@@ -214,7 +212,15 @@
 #else
   params["parentWindowHandle"] = getOgreHandle();
 #endif
-
+  
+// Set the macAPI for Ogre based on the WX implementation
+#ifdef __WXOSX_COCOA__
+  params["macAPI"] = "cocoa";
+  params["macAPICocoaUseNSView"] = "true";
+#else
+  params["macAPI"] = "carbon";
+#endif
+  
   // Get wx control window size
   int width;
   int height;
Index: rosdep.yaml
===================================================================
--- rosdep.yaml	(revision 37882)
+++ rosdep.yaml	(working copy)
@@ -1,6 +1,10 @@
 freeimage:
   ubuntu: libfreeimage-dev
   macports: freeimage
+  osx:
+    lion:
+      homebrew:
+        packages: [ freeimage ]
   debian: libfreeimage-dev
   arch: freeimage
   gentoo: freeimage
@@ -13,10 +17,19 @@
     if ! pacman -Q nvidia-cg-toolkit ; then yaourt -S nvidia-cg-toolkit; fi
   gentoo: nvidia-cg-toolkit
   debian: nvidia-cg-toolkit
+  osx:
+    lion:
+      source:
+        uri: 'http://mirror.ausparc.com/ros/sourcedeps/nvidia-cg.rdmanifest'
+        md5sum: 5877923536b171586bab4e17b25e276f
 libxrandr:
   ubuntu: libxrandr-dev
   debian: libxrandr-dev
   arch: libxrandr
   gentoo: x11-libs/libXrandr
   macports: xorg-libXrandr
+  osx:
+    lion:
+      homebrew:
+        packages: |
   fedora: libXrandr-devel
